/******************************************************************************
 * Core/Utility
*******************************************************************************/
.-hidden {
  display: none;
  position: absolute;
  left: -99999em;
}

.-wrapper {
  padding-left: @inset;
  padding-right: @inset;
}

.-limitter {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;

  @media @small {
    max-width: ~'calc(100% - @{insetTwo})';
  }

  @media only screen and (min-width: @maxContentWidth) {
    max-width: ~'calc(@{maxContentWidth} - @{insetTwo})';
  }
}

.-space {
  padding: @baseline;
  @media @small {
    padding: @baselineTwo;
  }

  &-t {
    padding-top: @baseline;
    @media @small {
      padding-top: @baselineTwo;
    }
  }

  &-r {
    padding-right: @baseline;
    @media @small {
      padding-right: @baselineTwo;
    }
  }

  &-b {
    padding-bottom: @baseline;
    @media @small {
      padding-bottom: @baselineTwo;
    }
  }

  &-l {
    padding-left: @baseline;
    @media @small {
      padding-left: @baselineTwo;
    }
  }
}

// Use this heirarchy to center elements inside fluid containers with unknown widths
.-ghost {
  font-size: 0;

  &:before {
    content: "";
    display: inline-block;
    height: 100%;
    margin-left: -1px;
    vertical-align: middle;
    width: 1px;
  }

  &--child {
    display: inline-block;
    vertical-align: middle;
  }
}

// Text align property
.-text {
  &--left {
    text-align: left;
  }
  &--center {
    text-align: center;
  }
  &--right {
    text-align: right;
  }
}

// Copy wrapper
.-wrap-copy {
  display: block;
  width: 100%;
  margin: 0 auto;
}

// Loaded Images. Style the scan in effect
img {

  &.lazy-load {
    opacity: 0;
    transition: ~'opacity @{baseDuration} @{ease}';

    &:not([src]) {
      top: 0 !important; // keeps img bounds inside containing element to prevent false negatives      
    }
  
    &[src][data-lazy-loaded="true"] {
      opacity: 1;
    }
  }
}

.-alt-bg {
  background: @gray;
}

// Use this with ToggleContent controller to show and hide content
.js-toggle-content {
  display: none;
  height: 0;
  overflow: hidden;
  transition: height @baseDuration @ease;

  &.is-visible {
    display: block;
    height: auto;
  }
}